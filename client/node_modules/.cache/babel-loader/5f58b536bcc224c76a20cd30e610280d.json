{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const {\n      userSnapshot\n    } = yield userRef.get();\n  } catch (error) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/pratikghosalkar/Documents/ReactProjects/study/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","createUserProfileDocument","googleProvider","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBH,cAArB,CAAvB;AACA,UAAMI,OAAO,GAAG,MAAMR,IAAI,CAACG,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAmB,MAAMD,OAAO,CAACE,GAAR,EAA/B;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc,CAAE;AACnB;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMf,UAAU,CAACI,eAAe,CAACY,oBAAjB,EAAuCR,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAMf,GAAG,CAAC,CAACC,IAAI,CAACY,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n} from \"../../firebase/firebase.utils\";\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const { userSnapshot } = yield userRef.get();\n  } catch (error) {}\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}