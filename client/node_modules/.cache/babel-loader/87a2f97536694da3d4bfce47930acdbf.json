{"ast":null,"code":"var _jsxFileName = \"/Users/pratikghosalkar/Documents/ReactProjects/study/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx\";\nimport \"./sign-up.styles.scss\";\nimport React, { Component, useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userDetails, setUserDetails] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    email,\n    password,\n    displayName,\n    confirmPassword\n  } = userDetails;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password's don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserDetails({ ...userDetails,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Sign up with email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/pratikghosalkar/Documents/ReactProjects/study/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userDetails","setUserDetails","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","value","name","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import \"./sign-up.styles.scss\";\nimport React, { Component, useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [userDetails, setUserDetails] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const { email, password, displayName, confirmPassword } = userDetails;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Password's don't match\");\n      return;\n    }\n\n    signUpStart({ displayName, email, password });\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setUserDetails({ ...userDetails, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I do not have an account</h2>\n      <span>Sign up with email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          handleChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">Sign Up</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}